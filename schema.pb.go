// Code generated by protoc-gen-go.
// source: schema.proto
// DO NOT EDIT!

package tipb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type TableInfo struct {
	TableId          *int64        `protobuf:"varint,1,opt,name=table_id" json:"table_id,omitempty"`
	Columns          []*ColumnInfo `protobuf:"bytes,2,rep,name=columns" json:"columns,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *TableInfo) Reset()                    { *m = TableInfo{} }
func (m *TableInfo) String() string            { return proto.CompactTextString(m) }
func (*TableInfo) ProtoMessage()               {}
func (*TableInfo) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *TableInfo) GetTableId() int64 {
	if m != nil && m.TableId != nil {
		return *m.TableId
	}
	return 0
}

func (m *TableInfo) GetColumns() []*ColumnInfo {
	if m != nil {
		return m.Columns
	}
	return nil
}

type ColumnInfo struct {
	ColumnId         *int64   `protobuf:"varint,1,opt,name=column_id" json:"column_id,omitempty"`
	Tp               *int32   `protobuf:"varint,2,opt,name=tp" json:"tp,omitempty"`
	Collation        *int32   `protobuf:"varint,3,opt,name=collation" json:"collation,omitempty"`
	ColumnLen        *int32   `protobuf:"varint,4,opt,name=columnLen" json:"columnLen,omitempty"`
	Decimal          *int32   `protobuf:"varint,5,opt,name=decimal" json:"decimal,omitempty"`
	Flag             *int32   `protobuf:"varint,6,opt,name=flag" json:"flag,omitempty"`
	Elems            []string `protobuf:"bytes,7,rep,name=elems" json:"elems,omitempty"`
	PkHandle         *bool    `protobuf:"varint,21,opt,name=pk_handle" json:"pk_handle,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *ColumnInfo) Reset()                    { *m = ColumnInfo{} }
func (m *ColumnInfo) String() string            { return proto.CompactTextString(m) }
func (*ColumnInfo) ProtoMessage()               {}
func (*ColumnInfo) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *ColumnInfo) GetColumnId() int64 {
	if m != nil && m.ColumnId != nil {
		return *m.ColumnId
	}
	return 0
}

func (m *ColumnInfo) GetTp() int32 {
	if m != nil && m.Tp != nil {
		return *m.Tp
	}
	return 0
}

func (m *ColumnInfo) GetCollation() int32 {
	if m != nil && m.Collation != nil {
		return *m.Collation
	}
	return 0
}

func (m *ColumnInfo) GetColumnLen() int32 {
	if m != nil && m.ColumnLen != nil {
		return *m.ColumnLen
	}
	return 0
}

func (m *ColumnInfo) GetDecimal() int32 {
	if m != nil && m.Decimal != nil {
		return *m.Decimal
	}
	return 0
}

func (m *ColumnInfo) GetFlag() int32 {
	if m != nil && m.Flag != nil {
		return *m.Flag
	}
	return 0
}

func (m *ColumnInfo) GetElems() []string {
	if m != nil {
		return m.Elems
	}
	return nil
}

func (m *ColumnInfo) GetPkHandle() bool {
	if m != nil && m.PkHandle != nil {
		return *m.PkHandle
	}
	return false
}

type IndexInfo struct {
	TableId          *int64        `protobuf:"varint,1,opt,name=table_id" json:"table_id,omitempty"`
	IndexId          *int64        `protobuf:"varint,2,opt,name=index_id" json:"index_id,omitempty"`
	Columns          []*ColumnInfo `protobuf:"bytes,3,rep,name=columns" json:"columns,omitempty"`
	Unique           *bool         `protobuf:"varint,4,opt,name=unique" json:"unique,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *IndexInfo) Reset()                    { *m = IndexInfo{} }
func (m *IndexInfo) String() string            { return proto.CompactTextString(m) }
func (*IndexInfo) ProtoMessage()               {}
func (*IndexInfo) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *IndexInfo) GetTableId() int64 {
	if m != nil && m.TableId != nil {
		return *m.TableId
	}
	return 0
}

func (m *IndexInfo) GetIndexId() int64 {
	if m != nil && m.IndexId != nil {
		return *m.IndexId
	}
	return 0
}

func (m *IndexInfo) GetColumns() []*ColumnInfo {
	if m != nil {
		return m.Columns
	}
	return nil
}

func (m *IndexInfo) GetUnique() bool {
	if m != nil && m.Unique != nil {
		return *m.Unique
	}
	return false
}

func init() {
	proto.RegisterType((*TableInfo)(nil), "tipb.TableInfo")
	proto.RegisterType((*ColumnInfo)(nil), "tipb.ColumnInfo")
	proto.RegisterType((*IndexInfo)(nil), "tipb.IndexInfo")
}

var fileDescriptor1 = []byte{
	// 259 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x74, 0x90, 0xcb, 0x4a, 0x03, 0x31,
	0x14, 0x86, 0xc9, 0x5c, 0x3a, 0x33, 0xa7, 0x55, 0x6b, 0xa0, 0x90, 0x65, 0x9d, 0x85, 0xcc, 0x6a,
	0x16, 0x3e, 0x81, 0xd4, 0x55, 0xc1, 0x45, 0x41, 0xf7, 0x25, 0x93, 0xa4, 0x6d, 0x30, 0x37, 0x9d,
	0x0c, 0xf8, 0x1c, 0x3e, 0xb1, 0x49, 0x14, 0x2a, 0xa2, 0xcb, 0xf3, 0xe5, 0x7c, 0x87, 0xff, 0x0f,
	0x2c, 0x46, 0x76, 0x12, 0x9a, 0xf6, 0xee, 0xcd, 0x7a, 0x8b, 0x0b, 0x2f, 0xdd, 0xd0, 0xde, 0x43,
	0xf3, 0x4c, 0x07, 0x25, 0xb6, 0xe6, 0x60, 0xf1, 0x12, 0x6a, 0x1f, 0x87, 0xbd, 0xe4, 0x04, 0xad,
	0x51, 0x97, 0xe3, 0x1b, 0xa8, 0x98, 0x55, 0x93, 0x36, 0x23, 0xc9, 0xd6, 0x79, 0x37, 0xbf, 0x5b,
	0xf6, 0x51, 0xeb, 0x1f, 0x12, 0x8c, 0x52, 0xfb, 0x81, 0x00, 0xce, 0x23, 0xbe, 0x86, 0xe6, 0xcb,
	0x38, 0x1f, 0x01, 0xc8, 0xbc, 0x0b, 0x3e, 0xea, 0xca, 0xef, 0x67, 0x45, 0xbd, 0xb4, 0x86, 0xe4,
	0x3f, 0x50, 0x30, 0x1e, 0x85, 0x21, 0x45, 0x42, 0x57, 0x50, 0x71, 0xc1, 0xa4, 0xa6, 0x8a, 0x94,
	0x09, 0x2c, 0xa0, 0x38, 0x28, 0x7a, 0x24, 0xb3, 0x34, 0x5d, 0x40, 0x29, 0x94, 0xd0, 0x23, 0xa9,
	0x42, 0xa6, 0x26, 0x1e, 0x70, 0x2f, 0xfb, 0x13, 0x35, 0x5c, 0x09, 0xb2, 0x0a, 0x1b, 0x75, 0x3b,
	0x40, 0xb3, 0x35, 0x5c, 0xbc, 0xff, 0x53, 0x2b, 0x10, 0x19, 0x9f, 0x23, 0xc9, 0x7e, 0x17, 0xcd,
	0xff, 0x2e, 0x8a, 0x2f, 0x61, 0x36, 0x19, 0xf9, 0x3a, 0x89, 0x14, 0xb2, 0xde, 0xdc, 0xc2, 0x8a,
	0x59, 0xdd, 0x3b, 0x69, 0x8e, 0x8c, 0xba, 0xb0, 0xce, 0x87, 0xe4, 0x6c, 0xe6, 0x4f, 0x21, 0x1d,
	0xf3, 0xbb, 0xf8, 0xcd, 0x3b, 0xf4, 0x19, 0x00, 0x00, 0xff, 0xff, 0xe0, 0x0a, 0x8a, 0x9e, 0x77,
	0x01, 0x00, 0x00,
}
